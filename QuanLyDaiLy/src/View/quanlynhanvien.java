/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;
import Connection.ConnectionJDBC;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import Connection.ConnectionUtils;

/**
 *
 * @author NDAT_UIT
 */
public class quanlynhanvien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyNhanVien
     */
    public quanlynhanvien() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/taikhoan_64px.png"))); // NOI18N
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Icon_64px.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(217, 198, 236));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tên Nhân Viên");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Số CMND/CCCD");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Ngày Sinh");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Số Điện Thoại");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton5.setBackground(new java.awt.Color(217, 198, 236));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/clear_32px.png"))); // NOI18N
        jButton5.setText("Xoá");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        
        jButton6.setBackground(new java.awt.Color(217, 198, 236));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update_32px.png"))); // NOI18N
        jButton6.setText("Sửa Đổi");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(217, 198, 236));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add_32px.png"))); // NOI18N
        jButton7.setText("Thêm");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(217, 198, 236));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18)), "TÌM KIẾM NHÂN VIÊN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        jPanel4.setToolTipText("");
        jPanel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel4.setVerifyInputWhenFocusTarget(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton3.setBackground(new java.awt.Color(217, 198, 236));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search.png"))); // NOI18N
        jButton3.setText("Tìm Kiếm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addGap(0, 0, 0))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jLabel11))
        );

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
            }
        ));
        jTable1.setToolTipText("");
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Tên Đăng Nhập");

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jDateChooser2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

		try (Connection conn = ConnectionUtils.getMyConnection()) 
		{
            if (conn != null) {
                System.out.println("Connected to the database!");
                Statement st =  conn.createStatement();
                ResultSet rs;
                rs = st.executeQuery("select * from nhanvien");
                
                while (rs.next()) {
                    String[] value = new String[100];
                    
                	value[0] = rs.getString("CMND");
                	value[1] = rs.getString("tennv");
                	value[2] = rs.getDate("ngaysinh").toString();
                	value[3] = rs.getString("sdt");
                	value[4] = rs.getString("tendangnhap");                	
                	
                	queries[index] = value;
                	index +=1 ;
                
                }

            } else {
                System.out.println("Failed to make connection!");
            }

        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }		
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                queries,
                new String [] {
                    "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
                }
            ));

		
        
        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(150, 150, 150)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton5)
                            .addComponent(jButton6))))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(224, 224, 224))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jButton5)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jButton6))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(17, 17, 17)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(21, 21, 21)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jButton1)
                .addGap(142, 142, 142)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(34, 34, 34)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        

        
    }// </editor-fold>//GEN-END:initComponents
    
    private String convertMonth(String month) {
    	switch (month) {
    	case "JANUARY":
    		return "01";
    	case "FEBRUARY":
    		return "02";
    	case "MARCH":
    		return "03";
    	case "APRIL":
    		return "04";
    	case "MAY":
    		return "05";
    	case "JUNE":
    		return "06";
    	case "JULY":
    		return "07";
    	case "AUGUST":
    		return "08";
    	case "SEPTEMBER":
    		return "09";
    	case "OCTOBER":
    		return "10";
    	case "NOVEMBER":
    		return "11";
    	case "DECEMBER":
    		return "12";
    	}
		return " ";
    }

    private int countBlank(String[] arr) {
    	int count = 0;
    	for (int i =0;i<=4;i++) {
    		if (arr[i].isBlank())
    			count +=1;
    	}
    	return count;
    }
    private int countNull(String[] arr) {
    	int count = 0;
    	for (int i =0;i<=4;i++) {
    		if (arr[i]== null)
    			count +=1;
    	}
    	return count;
    }
    private String[][] removeElement(String[][] arr,int id) {
    	if (id < 0 || arr == null || id >= arr.length)
    		return arr;
    	
    	String[][] arr_temp = new String[arr.length-1][];
    	index -= 1;
    	
    	for (int i = 0,k=0;i<arr.length;i++) {
    		if (i == id) 
    			continue;
    		arr_temp[k++] = arr[i];
    	}
    	return arr_temp;
    }

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    	if (evt.getSource() == jButton1) {
    		if (truycap.quyentruycap.equals("NND01")) {
    			new Home().setVisible(true);
    			this.dispose();
    		}
    		else if (truycap.quyentruycap.equals("NND02")) {
    			new Home_NhanVien().setVisible(true);
    			this.dispose();
    		}
    	}
    }                                           
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    	// xoa
    	if (evt.getSource() == jButton5) {
    		int row_select = jTable1.getSelectedRow();
    		if (row_select == -1) {
                JOptionPane.showMessageDialog(null,
                        "Vui lòng chọn nhân viên cần xóa",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;

    		}
    		if (row_select >=0 ) {
        		if (countNull(queries[row_select]) == 5) {
                    JOptionPane.showMessageDialog(null,
                            "Vui lòng chọn nhân viên tồn tại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
        		}
    		}

    		try (Connection conn = ConnectionUtils.getMyConnection()) 
    		{
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st =  conn.createStatement();
                    String delete_query = "Delete from nhanvien where cmnd = " + "\'" + queries[row_select][0] + "\'";
                    System.out.println(delete_query);
                    st.execute(delete_query);
            		queries = removeElement(queries,row_select);

                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    		queries,
                            new String [] {
                                    "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
                            }
                        ));

                } else {
                    System.out.println("Failed to make connection!");
                }

            } catch (SQLException e) {
                System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
                if (e.getSQLState().equals("23000"))
                    JOptionPane.showMessageDialog(null,
                            "Lỗi khóa chính/ngoại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                return;
 
            } catch (Exception e) {
                e.printStackTrace();
            }		
	        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update_32px.png"))); // NOI18N
	        jButton6.setText("Sửa đổi");

    	}
        JOptionPane.showMessageDialog(null,
                "Xóa thành công",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);

    }                                           

	private int current_row = -2;
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	// sua 
    	if (evt.getSource() == jButton6) {
    		boolean hasdn = false;
    		int row_select = jTable1.getSelectedRow();
    		
    		if (row_select >= index) {
        		jTextField1.setText(null);
        		jTextField2.setText(null);
        		jTextField4.setText(null);
        		jTextField7.setText(null);
    			jDateChooser2.setDate(null);

        		JOptionPane.showMessageDialog(null,
	        		    "Vui lòng chọn nhân viên tồn tại",
	                    "ERROR",
	                    JOptionPane.ERROR_MESSAGE);
        		
    			current_row = row_select;
    			
                return;
    		}
    		
    		if (current_row >= 0 ) {
    			jTable1.getSelectionModel().setSelectionInterval(current_row, current_row);

    			jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/tick_32px.png"))); // NOI18N
    	        jButton6.setText("Xác nhận");
    		}
    		
    		if (row_select >= 0) {
    			if (current_row != row_select) {
	    			jTextField1.setText(queries[row_select][0]);
	    			jTextField2.setText(queries[row_select][1]);
	    			try {
						jDateChooser2.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(queries[row_select][2]));
					} catch (ParseException e) {
						e.printStackTrace();
					}
		
	    			jTextField4.setText(queries[row_select][3]);
	    			jTextField7.setText(queries[row_select][4]);
    			}
    			
    			current_row = row_select;
    			    			
    			DateTimeFormatter fmt2 = DateTimeFormatter.ofPattern("EEE MMM dd HH:mm:ss z yyyy");
    			LocalDate localDate1 = LocalDate.parse(jDateChooser2.getDate().toString(),fmt2);
    			String day = "";
    			if (String.valueOf(localDate1.getDayOfMonth()).length() == 1)
    				day = "0" + localDate1.getDayOfMonth();
    			else
    				day = String.valueOf(localDate1.getDayOfMonth());
    			String date = day + "/" + convertMonth(localDate1.getMonth().toString()) + "/" + localDate1.getYear();
    			    			    			
    	        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update_32px.png"))); // NOI18N
    	        jButton6.setText("Sửa đổi");
    	        
    			try (Connection conn = ConnectionUtils.getMyConnection()) 
    			{
    	            if (conn != null) {
    	                System.out.println("Connected to the database!");
    	                Statement st =  conn.createStatement();
    	                
    	    			String update_query = "Update nhanvien set " + "cmnd = " + "\'" +  jTextField1.getText() + "\'"+ ", tennv = N" + "\'" +  jTextField2.getText() + "\'" + ", ngaysinh = " + "\'" +  date + "\'"+ ", sdt = N" + "\'" +  jTextField4.getText() + "\'"+ ", tendangnhap = " + "\'" + jTextField7.getText()  + "\' where cmnd = " + "\'" + queries[row_select][0] + "\'";
    	    			System.out.println(update_query);
    	    			
                        Statement st1 =  conn.createStatement();
                        ResultSet rs1;
                        String query_tendn = "select * from nguoidung";
                        rs1 = st1.executeQuery(query_tendn);
                        while (rs1.next()) {
                        	if (jTextField7.getText().equals(rs1.getString("tendangnhap"))) {
                        		hasdn = true;
                        	}
                        }

    	    			st.execute("ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY'");
    	                st.execute(update_query);
    	            }
    	            else {
    	                System.out.println("Failed to make connection!");
    	            }
    	        } 
    			catch (SQLException e) {
    	            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
                    
    	            if (!hasdn) {
                        JOptionPane.showMessageDialog(null,
                                "Tên đăng nhập không tồn tại",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
    	            
    	            if (e.getSQLState().equals("23000"))
                    {    
                    	JOptionPane.showMessageDialog(null,
                                "CMND đã tồn tại",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                    	return;
                    }

    	        } catch (Exception e) {
    	            e.printStackTrace();
                	JOptionPane.showMessageDialog(null,
                            "Vui lòng nhập đúng định dạng",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                	return;

                	
    	        }		
    			
    			queries[row_select][0] = jTextField1.getText(); // avoid conflict while update
    			queries[row_select][1] = jTextField2.getText();
    			queries[row_select][2] = localDate1.getYear() + "-" + convertMonth(localDate1.getMonth().toString()) + "-" + day;    			queries[row_select][3] = jTextField4.getText();
    			queries[row_select][4] = jTextField7.getText();

                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                        queries,
                        new String [] {
                                "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
                        }
                    ));
    		}
    		}

    	}
//GEN-LAST:event_jButton1ActionPerformed

    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    	// them
    	if (evt.getSource() == jButton7) {
    		boolean hasdn = false;
    		try (Connection conn = ConnectionUtils.getMyConnection()) 
    		{
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st =  conn.createStatement();
                    ResultSet rs;
                    String[] value = new String[100];
                    String date = null;
        			
        			try {
        				value[0] = jTextField1.getText();
        				value[1] = jTextField2.getText();
        				
            			DateTimeFormatter fmt2 = DateTimeFormatter.ofPattern("EEE MMM dd HH:mm:ss z yyyy");
            			LocalDate localDate1 = LocalDate.parse(jDateChooser2.getDate().toString(),fmt2);
            			String day = "";
            			if (String.valueOf(localDate1.getDayOfMonth()).length() == 1)
            				day = "0" + localDate1.getDayOfMonth();
            			else
            				day = String.valueOf(localDate1.getDayOfMonth());

            			date = localDate1.getYear() + "-" +  convertMonth(localDate1.getMonth().toString()) + "-" + day ;
            			value[2] = date;
        				value[3] = jTextField4.getText();
        				value[4] = jTextField7.getText();
        				
                        if (countBlank(value) >0) {
                            JOptionPane.showMessageDialog(null,
                                    "Vui lòng nhập đúng và đầy đủ thông tin về nhân viên",
                                    "ERROR",
                                    JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    } 
        			catch(Exception e) {
                        if (countNull(value) >0) {
                            JOptionPane.showMessageDialog(null,
                                    "Vui lòng nhập đúng và đầy đủ thông tin về nhân viên",
                                    "ERROR",
                                    JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
        			
                    Statement st1 =  conn.createStatement();
                    ResultSet rs1;
                    String query_tendn = "select * from nguoidung";
                    rs1 = st1.executeQuery(query_tendn);
                    while (rs1.next()) {
                    	if (value[4].equals(rs1.getString("tendangnhap"))) {
                    		hasdn = true;
                    	}
                    }
                    
            		
            		String insert_query = "insert into nhanvien values(\'" + value[0] + "\',\'" + value[1] + "\',\'" + value[2] + "\',\'" + value[3] + "\',\'" + value[4] + "\')";
            		System.out.println(insert_query);
                    st.execute("ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD'");
            		st.execute(insert_query);

            		queries[index] = value;
            		index += 1;

            		jTable1.setModel(new javax.swing.table.DefaultTableModel(
                            queries,
                            new String [] {
                                "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
                            }
                        ));
  
                } else {
                    System.out.println("Failed to make connection!");
                }
                
        		

            } catch (SQLException e) {
                System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
	            
                if (!hasdn) {
                	JOptionPane.showMessageDialog(null,
                            "Tên đăng nhập không tồn tại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                	return;

                }
                
                if (e.getSQLState().equals("23000"))
                {    
                	JOptionPane.showMessageDialog(null,
                            "CMND đã tồn tại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                	return;
                }

            }
    		catch (Exception e) {
	            e.printStackTrace();
            	JOptionPane.showMessageDialog(null,
                        "Vui lòng nhập đúng định dạng",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
            	return;            	
    		}
	        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update_32px.png"))); // NOI18N
	        jButton6.setText("Sửa đổi");

    	} 

        JOptionPane.showMessageDialog(null,
                "Thêm thành công",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
    	// tim kiem
    	if (evt.getSource() == jButton3) {
    		try (Connection conn = ConnectionUtils.getMyConnection()) 
    		{
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st =  conn.createStatement();
                    ResultSet rs;
                    String query_text = jTextField5.getText();
                    if (query_text.isBlank()) {
                        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                                queries,
                                new String [] {
                                        "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
                                }));
                        return;
                    }
                    String query = "select * from nhanvien where cmnd = \'" + query_text +"\'";
                    System.out.println(query);
                    rs = st.executeQuery(query);
                    int i = 0;
                    String find_queries[][] = new String[100][];
                    while (rs.next()) {
                        String[] value = new String[100];
                    	value[0] = rs.getString("cmnd");
                    	value[1] = rs.getString("tennv");
                    	value[2] = rs.getDate("ngaysinh").toString();
                    	value[3] = rs.getString("sdt");
                    	value[4] = rs.getString("tendangnhap");
                    	find_queries[i] = value;
                    	i +=1 ;
                    }
                    if (find_queries[0] == null) {
                        JOptionPane.showMessageDialog(null,
                               "Không tìm thấy",
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    		find_queries,
                            new String [] {
                                    "Số CMND/CCCD", "Tên Nhân Viên", "Ngày Sinh", "Số Điện Thoại", "Tên Đăng Nhập"
                            }));
                 
                } else {
                    System.out.println("Failed to make connection!");
                }

            } catch (SQLException e) {
                System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
            } catch (Exception e) {
                e.printStackTrace();
            }	
    		
    	}

    	
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlynhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlynhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlynhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlynhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlynhanvien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    String[][] queries = new String[1000][];
    int index = 0;
    // End of variables declaration//GEN-END:variables
}
