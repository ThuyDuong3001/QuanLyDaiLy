/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Hashtable;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Connection.ConnectionUtils;
import java.sql.ResultSet;

/**
 *
 * @author minhv
 */
public class ctpx_new extends javax.swing.JFrame {

    /**
     * Creates new form ctpx_new
     */
    public ctpx_new() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabeltrigia = new javax.swing.JLabel();
        jLabeltongtien = new javax.swing.JLabel();

        jLabelsotientra = new javax.swing.JLabel();
        jLabelsotienno = new javax.swing.JLabel();
        jLabeltienno = new javax.swing.JLabel();
        jTextFieldsotientra = new javax.swing.JTextField();

        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(217, 198, 236));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("Phiếu Xuất");

        jLabeltrigia.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabeltrigia.setForeground(new java.awt.Color(0, 51, 255));
        jLabeltrigia.setText("Trị giá: ");

        
        jLabelsotientra.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelsotientra.setForeground(new java.awt.Color(0, 51, 255));
        jLabelsotientra.setText("Số tiền trả: ");

        jLabelsotienno.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelsotienno.setForeground(new java.awt.Color(0, 51, 255));
        jLabelsotienno.setText("Số tiền nợ: ");
        
        jLabeltienno.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabeltienno.setForeground(new java.awt.Color(0, 51, 255));
        jLabeltienno.setText("0");


        jLabeltongtien.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabeltongtien.setForeground(new java.awt.Color(0, 51, 255));
        jLabeltongtien.setText("0");
        
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton5.setBackground(new java.awt.Color(217, 198, 236));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/clear_32px.png"))); // NOI18N
        jButton5.setText("Xoá");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(217, 198, 236));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update_32px.png"))); // NOI18N
        jButton6.setText("Quay Lại");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(217, 198, 236));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add_32px.png"))); // NOI18N
        jButton7.setText("Thêm");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        
        jTextFieldsotientra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldsotientra.setText("0");
        jTextFieldsotientra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jTextFieldsotientraActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(217, 198, 236));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update_32px.png"))); // NOI18N
        jButton8.setText("In");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Mặt Hàng", "Tên Mặt Hàng", "Đơn Giá Nhập", "Số Lượng Tồn", "Mã Đơn Vị Tính", "Nhà Cung Cấp"
            }
        ));
        jTable1.setToolTipText("");
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable1);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try (Connection conn = ConnectionUtils.getMyConnection()){
            if (conn != null) {
                System.out.println("Connected to the database!");
                Statement st =  conn.createStatement();
                ResultSet rs;
                String query1 = "select * from mathang order by mamathang";

                System.out.println(query1);
                rs = st.executeQuery(query1);
                while (rs.next()) {
                    String[] value = new String[100];
                    value[0] = rs.getString("MAMATHANG");
                    value[1] = rs.getString("TENMATHANG");
                    value[2] = rs.getString("DONGIANHAP");
                    value[4] = rs.getString("SOLUONGTON");
                    value[5] = rs.getString("MADONVITINH");
                    value[6] = rs.getString("TENNHACUNGCAP");
                    String tbData [] = {value[0], value[1], value[2], value[4], value[5], value[6]};
                    DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                    tblModel.addRow(tbData);
                }

            }
        }catch (SQLException ex) {
            Logger.getLogger(ctpx.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã CTPX", "Mã Phiếu Xuất", "Mã Mặt Hàng", "Số Lượng", "Đơn Giá Xuất", "Thành Tiền"
            }
        ));
        jTable2.setToolTipText("");
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(jTable2);
        DefaultTableModel model1 = (DefaultTableModel) jTable2.getModel();
        model1.setRowCount(0);
        try (Connection conn = ConnectionUtils.getMyConnection()){
            if (conn != null) {
                System.out.println("Connected to the database!");
                Statement st =  conn.createStatement();
                ResultSet rs;
                String mapx = truycap.maphieuxuat;
                String query1 = "select * from chitietphieuxuat where maphieuxuat = " + "\'" + mapx + "\'" +"order by ma_ctpx";

                System.out.println(query1);
                rs = st.executeQuery(query1);
                while (rs.next()) {
                    String[] value = new String[100];
                    value[0] = rs.getString("MA_CTPX");
                    value[1] = rs.getString("MAPHIEUXUAT");
                    value[2] = rs.getString("MAMATHANG");
                    value[4] = rs.getString("SOLUONG");
                    value[5] = rs.getString("DONGIAXUAT");
                    value[6] = rs.getString("THANHTIEN");
                    String tbData [] = {value[0], value[1], value[2], value[4], value[5], value[6]};
                    DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
                    tblModel.addRow(tbData);
                }

            }
        }catch (SQLException ex) {
            Logger.getLogger(ctpx.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Số Lượng");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(146, 146, 146)
                                .addComponent(jButton6))
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
            		.addComponent(jLabelsotientra)
                    .addComponent(jTextFieldsotientra, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(200,200,200)
                    .addComponent(jLabeltrigia)
                 	.addComponent(jLabeltongtien)

            		)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                    .addComponent(jLabelsotienno)
                    .addComponent(jLabeltienno))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    
            		.addComponent(jButton5)

                    .addGap(85, 85, 85)
                    .addComponent(jButton8)
)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(162, 367, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)

                		.addComponent(jButton7)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabeltrigia)
                        .addComponent(jLabeltongtien)
                        .addComponent(jLabelsotientra)
                        .addComponent(jTextFieldsotientra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
)
     		   .addGap(30,30,30)
               .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                       .addComponent(jLabelsotienno)
                       .addComponent(jLabeltienno)
)


               .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                	.addComponent(jButton5)
                    .addComponent(jButton8))
                .addGap(180, 180, 180))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 720, Short.MAX_VALUE)
        		);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
                if(evt.getSource() == jButton5){
            try (Connection conn = ConnectionUtils.getMyConnection()){
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st =  conn.createStatement();
                    Statement st1 =  conn.createStatement();
                    Statement st2 =  conn.createStatement();
                    Statement st3 =  conn.createStatement();
                    Statement st4 =  conn.createStatement();
                    ResultSet rs;
                    int row = jTable2.getSelectedRow();
                    String ma_ctpx = String.valueOf(jTable2.getValueAt(row, 0));
                                                                     
                    String sl = String.valueOf(jTable2.getValueAt(row, 3));
                    String mathang = String.valueOf(jTable2.getValueAt(row, 2));
                    String thanhtien = String.valueOf(jTable2.getValueAt(row, 5));
                    String mapx = String.valueOf(jTable2.getValueAt(row, 1));
                    int x = Integer.parseInt(thanhtien);
                    
                    long sotienno1 = Long.parseLong(jLabeltienno.getText());
                    if (sotienno1 - Long.parseLong(thanhtien) < 0) {
                      JOptionPane.showMessageDialog(null,
                      "Đã thanh toán, không thể xóa",
                      "ERROR",
                      JOptionPane.ERROR_MESSAGE);
                      return;
                    }
                    sotienno1 -= Long.parseLong(thanhtien);
                    jLabeltienno.setText(String.valueOf(sotienno1));
                    
                    String query0 = "select sotienno from phieuxuathang where maphieuxuat = " + "\'" + mapx + "\'";
                    rs = st.executeQuery(query0);
                    int sotienno = 0;
                    while (rs.next()) {
                        sotienno = rs.getInt("sotienno");
                    }
                    // xu ly table daily
                    String query1 = "select madaily from phieuxuathang where maphieuxuat = " + "\'"+ mapx +"\'";
                    rs = st1.executeQuery(query1);
                    String madl = "" ;
                    while (rs.next()) {
                        madl = rs.getString("madaily");
                    } 
                    String query6 ="select tongno from daily where madaily = "+ "\'" +madl+ "\'" ;
                    rs = st1.executeQuery(query6);
                    int tongno = 0;
                    while (rs.next()) {
                        tongno = rs.getInt("tongno");
                    }
                    
                    String query4 = "update phieuxuathang set sotienno = sotienno - "+  thanhtien +" where MAPHIEUXUAT = " + "\'" + mapx +"\'";
                    String query5 = "update daily "
                                + "set tongno = tongno - " + x 
                                + " WHERE MADAILY = " + "\'"+ madl +"\'";
 
                    // xu ly rang buoc
//                    if(sotienno >= x ){
//                        st3.executeUpdate(query4);
//                        st4.executeUpdate(query5);
//                    }else if(sotienno < x && tongno >=x){
//                        st4.executeUpdate(query5);
//                    }else{
//                        JOptionPane.showMessageDialog(null,
//                            "Tổng Nợ Không Đủ (Còn Lại: " + tongno + ")",
//                            "ERROR",
//                            JOptionPane.ERROR_MESSAGE);
//                        return;
//                    }
                    
                    String delete_query = "Delete from chitietphieuxuat where ma_ctpx = " + "\'" + ma_ctpx + "\'";
                    System.out.println(delete_query);
                    st.executeUpdate(delete_query);
                    String query2 = "update mathang set soluongton = soluongton + "  + sl + " where mamathang = " + "\'" + mathang +"\'";
                    st.executeUpdate(query2);
                    String query3 = "update phieuxuathang set tongtien = tongtien - " + thanhtien + " where MAPHIEUXUAT = " + "\'" + mapx +"\'";
                    st2.executeUpdate(query3);
                    
                    Statement st5 =  conn.createStatement();
                    DefaultTableModel dtm = (DefaultTableModel)jTable2.getModel();
                    dtm.setRowCount(0);
                    ResultSet rstb;
                    String query_ctpx = "select * from chitietphieuxuat where maphieuxuat = " + "\'" + mapx + "\'" +"order by ma_ctpx";
                    rstb = st5.executeQuery(query_ctpx);
                    while (rstb.next()) {
                        String[] value = new String[100];
                        value[0] = rstb.getString("MA_CTPX");
                        value[1] = rstb.getString("MAPHIEUXUAT");
                        value[2] = rstb.getString("MAMATHANG");
                        value[4] = rstb.getString("SOLUONG");
                        value[5] = rstb.getString("DONGIAXUAT");
                        value[6] = rstb.getString("THANHTIEN");
                        String tbData [] = {value[0], value[1], value[2], value[4], value[5], value[6]};
                        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
                        tblModel.addRow(tbData);
                    }
                    
                    Statement st9 =  conn.createStatement();
                    DefaultTableModel dtm2 = (DefaultTableModel)jTable1.getModel();
                    dtm2.setRowCount(0);
                    ResultSet rstb1;
                    String query_mh = "select * from mathang ";
                    rstb1 = st9.executeQuery(query_mh);
                    while (rstb1.next()) {
                        String[] value = new String[100];
                        value[0] = rstb1.getString("MAMATHANG");
                        value[1] = rstb1.getString("TENMATHANG");
                        value[2] = rstb1.getString("DONGIANHAP");
                        value[4] = rstb1.getString("SOLUONGTON");
                        value[5] = rstb1.getString("MADONVITINH");
                        value[6] = rstb1.getString("TENNHACUNGCAP");
                        String tbData [] = {value[0], value[1], value[2], value[4], value[5], value[6]};
                        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                        tblModel.addRow(tbData);
                    }
                    tongtien -= Long.parseLong(thanhtien);
                    jLabeltongtien.setText(String.valueOf(tongtien));
                    my_dict.put(mathang, String.valueOf(Integer.parseInt(my_dict.get(mathang)) - Integer.parseInt(sl)));

                } else{
                    System.out.println("Failed to make connection!");
                }

            }catch (SQLException e) {
                
            } catch (ClassNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == jButton6) {
            try (Connection conn = ConnectionUtils.getMyConnection()){   
                Statement st1 =  conn.createStatement();
                String query = "delete from chitietphieuxuat where MAphieuxuat = \'" + truycap.maphieuxuat + "\'"; 
                st1.executeQuery(query);
                
                if(my_dict != null) {

	                for (Map.Entry<String,String> entry : my_dict.entrySet()) {
	                	String mathang = entry.getKey();
	                	int sl = Integer.valueOf(entry.getValue());
	                	System.out.println(mathang+" " +sl);
	                	Statement st = conn.createStatement();
	                	String query1 = "update mathang set soluongton = soluongton + " + sl +" where mamathang = \'" + mathang + "\'"; 
	                	st.executeQuery(query1);
	                }
	        
                }

                
            } catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

        	
        	this.dispose();
            
            new QLXH().setVisible(true);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == jButton7){
            try (Connection conn = ConnectionUtils.getMyConnection()){   
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st1 =  conn.createStatement();
                    Statement st2 =  conn.createStatement();
                    Statement st3 =  conn.createStatement();
                    Statement st4 =  conn.createStatement();
                    ResultSet rs;

                    int row = jTable1.getSelectedRow();
                    if (row == -1) {
                        JOptionPane.showMessageDialog(null,
                                "Vui lòng chọn mặt hàng cần xuất",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                                return;

                    }

                    String mathang = String.valueOf(jTable1.getValueAt(row, 0));
                    if (jTextField8.getText().isBlank() ) {
                      JOptionPane.showMessageDialog(null,
                      "Vui lòng nhập số lượng",
                      "ERROR",
                      JOptionPane.ERROR_MESSAGE);
                      return;
                    }
                    try {
                        int d = Integer.parseInt(jTextField8.getText());
                        if (d<= 0) {
                            JOptionPane.showMessageDialog(null,
                                    "Vui lòng nhập số lớn hơn 0",
                                    "ERROR",
                                    JOptionPane.ERROR_MESSAGE);
                                    return;

                        }
                    } catch (NumberFormatException nfe) {
                        JOptionPane.showMessageDialog(null,
                                "Vui lòng nhập số",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                                return;
                    }

                    String soluong  = jTextField8.getText();
                    int x = Integer.parseInt(soluong);                    
                    String mapx = truycap.maphieuxuat;                                    

                    String query0 = "select * from mathang where mamathang = " + "\'" + mathang + "\'";
                    rs = st3.executeQuery(query0);
                    System.out.print(query0);
                    int sl = 0 ;
                    int dongiaxuat = 0;
                    while (rs.next()) {
                        sl = rs.getInt("soluongton");
                        dongiaxuat = rs.getInt("dongiaxuat");
                    } 
                    
                    if(sl < x){
                        JOptionPane.showMessageDialog(null,
                            "Số Lượng Tồn Không Đủ (Còn Lại: " + sl + ")",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    int thanhtien = x*dongiaxuat;
                    tongtien += (thanhtien);
                    
                    
                    
                    jLabeltongtien.setText(String.valueOf(tongtien));

                    System.out.print(thanhtien);                     
                    String query1 = "insert into chitietphieuxuat values (SEQ_CHITIETPHIEUXUAT.NEXTVAL," + "\'" + mapx + "\'" + "," + "\'" + mathang + "\'" + "," + x + "," + dongiaxuat +","+ thanhtien + ")";
                    st1.executeUpdate(query1);
                    System.out.print(query1);
                    String query2 = "update mathang set soluongton = soluongton - " + x + "where mamathang = " + "\'" + mathang +"\'";
                    st1.executeUpdate(query2);
                    

                    String madl = truycap.madl ;
                    
                       
                    Statement st =  conn.createStatement();
                    DefaultTableModel dtm = (DefaultTableModel)jTable2.getModel();
                    dtm.setRowCount(0);
                    ResultSet rstb;
                    String query_ctpx = "select * from chitietphieuxuat where maphieuxuat = " + "\'" + mapx + "\'" +"order by ma_ctpx";
                    rstb = st.executeQuery(query_ctpx);
                    while (rstb.next()) {
                        String[] value = new String[100];
                        value[0] = rstb.getString("MA_CTPX");
                        value[1] = rstb.getString("MAPHIEUXUAT");
                        value[2] = rstb.getString("MAMATHANG");
                        value[4] = rstb.getString("SOLUONG");
                        value[5] = rstb.getString("DONGIAXUAT");
                        value[6] = rstb.getString("THANHTIEN");
                        String tbData [] = {value[0], value[1], value[2], value[4], value[5], value[6]};
                        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
                        tblModel.addRow(tbData);
                    }
                    
                    
                    Statement st9 =  conn.createStatement();
                    DefaultTableModel dtm2 = (DefaultTableModel)jTable1.getModel();
                    dtm2.setRowCount(0);
                    ResultSet rstb1;
                    String query_mh = "select * from mathang ";
                    rstb1 = st9.executeQuery(query_mh);
                    while (rstb1.next()) {
                        String[] value = new String[100];
                        value[0] = rstb1.getString("MAMATHANG");
                        value[1] = rstb1.getString("TENMATHANG");
                        value[2] = rstb1.getString("DONGIANHAP");
                        value[4] = rstb1.getString("SOLUONGTON");
                        value[5] = rstb1.getString("MADONVITINH");
                        value[6] = rstb1.getString("TENNHACUNGCAP");
                        String tbData [] = {value[0], value[1], value[2], value[4], value[5], value[6]};
                        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                        tblModel.addRow(tbData);
                    }
                    if (!my_dict.containsKey(mathang)) {
                    	my_dict.put(mathang, String.valueOf(x));
                    }
                    else {
                    	my_dict.put(mathang, String.valueOf(Integer.parseInt(my_dict.get(mathang)) + x));

                    }
                    
                    long sotienno = Long.parseLong(jLabeltienno.getText());
                    sotienno += thanhtien;
                    jLabeltienno.setText(String.valueOf(sotienno));
                }else{
                    System.out.println("Failed to make connection!");      
                }
            } catch (SQLException ex) {
//                if (ex.getSQLState().equals("23000"))
//                    JOptionPane.showMessageDialog(null,
//                            "Mã Chi Tiết Phiếu Xuất Đã Tồn Tại",
//                            "ERROR",
//                            JOptionPane.ERROR_MESSAGE);
                   System.out.println(ex);
                 
            } catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed
    
    private void jTextFieldsotientraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    	if (evt.getSource() == jTextFieldsotientra) {
    		if (jTextFieldsotientra.getText().isBlank()) {
    			return;
    		}
            try {
                int d = Integer.parseInt(jTextFieldsotientra.getText());
                if (d<= 0) {
                    JOptionPane.showMessageDialog(null,
                            "Vui lòng nhập số lớn hơn 0",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                            return;

                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null,
                        "Vui lòng nhập số",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                        return;
            }

            try (Connection conn = ConnectionUtils.getMyConnection()){   
                Statement st1 =  conn.createStatement();
                long sotientra = Long.parseLong(jTextFieldsotientra.getText());
                long sotienno = Long.parseLong(jLabeltienno.getText());

                if (sotientra >= sotienno) {
                    JOptionPane.showMessageDialog(null,
                            "Số tiền trả vượt quá tiền nợ",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                            return;

                }
                int dialogButton = JOptionPane.YES_NO_OPTION;

                int dialogResult =  JOptionPane.showConfirmDialog (null, "Xác nhận thanh toán?","Cảnh báo",dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                
	                sotienno -= sotientra;
	                jLabeltienno.setText(String.valueOf(sotienno));
	                sotientraall += sotientra;
                }
                
            } catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

    	}
    	
    }//GEN-LAST:event_jTextField8ActionPerformed

    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    	if (evt.getSource() == jButton8) {
    		try(Connection conn = ConnectionUtils.getMyConnection()){
    			Statement st = conn.createStatement();
    			String date = truycap.date;
    			int sum = 0;
    			date = date.replace("-", "/");
    			
    			Statement st1 = conn.createStatement();
    			ResultSet rs = st1.executeQuery("select sum(thanhtien) from chitietphieuxuat where maphieuxuat = \'" + truycap.maphieuxuat +  "\' group by Maphieuxuat\n"+ "");
    			while (rs.next()) {
    				sum = rs.getInt("sum(thanhtien)");
    			}
    			if (tongtien == 0) {
                    JOptionPane.showMessageDialog(null,
                            "Phiếu rỗng",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE); 
                    return;

    			}

              long tongnodl = 0;
              String maloaidl = "";
              Statement sttn = conn.createStatement();
              ResultSet rstn = sttn.executeQuery("select * from daily where madaily = \'" + truycap.madl + "\'");
              while (rstn.next()) {
              	tongnodl = rstn.getLong("tongno");
              	maloaidl = rstn.getString("maloaidaily");
              }
              
              long notoida = 0;
              Statement stntd = conn.createStatement();
              ResultSet rsntd = stntd.executeQuery("select * from loaidaily where maloaidaily = \'" + maloaidl + "\'");
              while (rsntd.next()) {
              	notoida = rsntd.getLong("sonotoida");
              }
              
              if (tongnodl + Long.parseLong(jLabeltienno.getText()) > notoida) {
                  JOptionPane.showMessageDialog(null,
                          "Vượt quá tổng nợ của đại lý",
                          "ERROR",
                          JOptionPane.ERROR_MESSAGE);
                      return;

              }
              Statement st4 = conn.createStatement();
              String query5 = "update daily "
                      + "set tongno = tongno + " + jLabeltienno.getText()
                      + " WHERE MADAILY = " + "\'"+ truycap.madl +"\'";
	          st4.executeUpdate(query5);
	          System.out.println(query5);

    			st.executeUpdate("ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD'");
                String query3 = "insert into phieuxuathang values (\'"+ truycap.maphieuxuat + "\',"  + "\'" + truycap.madl + "\'," + tongtien + ",\'" + date + "\'," + sotientraall + "," + jLabeltienno.getText() + ",\'" + truycap.cmnd + "\')";
                System.out.print(query3);
                
                st.executeUpdate(query3);
                JOptionPane.showMessageDialog(null,
                        "In thành công",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE); 
                new QLXH().setVisible(true);
                this.dispose();

    			
    		} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SQLException e) {
				e.printStackTrace();

			}
    		
    	}
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ctpx_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ctpx_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ctpx_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ctpx_new.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ctpx_new().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabeltrigia;
    private javax.swing.JLabel jLabeltongtien;
    
    private javax.swing.JLabel jLabelsotientra;
    private javax.swing.JTextField jTextFieldsotientra;

    private javax.swing.JLabel jLabelsotienno;
    private javax.swing.JLabel jLabeltienno;


    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField8;
    private long tongtien = 0;
    private long sotientraall = 0;
	Hashtable<String, String> my_dict = new Hashtable<String, String>();

    // End of variables declaration//GEN-END:variables
}
