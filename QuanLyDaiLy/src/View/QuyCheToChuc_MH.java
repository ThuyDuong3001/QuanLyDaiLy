package View;
import Connection.ConnectionJDBC;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import Connection.ConnectionUtils;

/**
 *
 * @author NDAT_UIT
 */
public class QuyCheToChuc_MH extends javax.swing.JFrame {

    /**
     * Creates new form QuyCheToChuc_MH
     */
    public QuyCheToChuc_MH() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        
        jLabelmamathang = new javax.swing.JLabel();
        jLabeltenmathang = new javax.swing.JLabel();
        jLabeldongianhap = new javax.swing.JLabel();
        jLabelsoluongton = new javax.swing.JLabel();
        jLabelmadvt = new javax.swing.JLabel();
        jLabeltennhacungcap = new javax.swing.JLabel();

        jLabelmamathang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelmamathang.setText("Mã mặt hàng");
        
        jLabeltenmathang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabeltenmathang.setText("Tên mặt hàng");
        
        jLabeldongianhap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabeldongianhap.setText("Đơn giá nhập");
        
        jLabelsoluongton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelsoluongton.setText("Số lượng tồn");
        
        jLabelmadvt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelmadvt.setText("Mã đơn vị tính");

        jLabeltennhacungcap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabeltennhacungcap.setText("Tên nhà cung cấp");

        jTextFieldmamathang = new javax.swing.JTextField();
        jTextFieldtenmathang = new javax.swing.JTextField();
        jTextFielddongianhap = new javax.swing.JTextField();
        jTextFieldsoluongton = new javax.swing.JTextField();
        jTextFieldmadvt = new javax.swing.JTextField(); 
        jTextFieldtennhacungcap = new javax.swing.JTextField();

        jTextFieldmamathang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldtenmathang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFielddongianhap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldsoluongton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldmadvt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldtennhacungcap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        
        jButtonthem = new javax.swing.JButton();
        jButtonthem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonthem.setText("Thêm");
        jButtonthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonthemActionPerformed(evt);
            }
        });

        jButtonxoa = new javax.swing.JButton();
        jButtonxoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonxoa.setText("Xóa");
        jButtonxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonxoaActionPerformed(evt);
            }
        });

        jButtonsua = new javax.swing.JButton();
        jButtonsua = new javax.swing.JButton();
        jButtonsua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonsua.setText("Sửa đổi");
        jButtonsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jButtonsuaActionPerformed(evt);
            }
        });


//        jButton1.setBackground(new java.awt.Color(204, 153, 255));
//        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
//        jButton1.setText("Quy Định Tiền Nợ");

        jButton2.setBackground(new java.awt.Color(204, 153, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Quy Định Mặt Hàng");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 153, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Quy Chế Tổ Chức");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 229, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Đơn Giá");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Đơn Vị Tính");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null,null, null, null, null},
                {null, null, null,null, null, null, null},
                {null, null, null,null, null, null, null},
                {null, null, null,null, null, null, null},
                {null, null, null,null, null, null, null}
            },
            new String [] {
                "Mã mặt hàng", "Tên mặt hàng", "Đơn Giá Nhập", "Đơn giá xuất", "Số lượng tồn", "Mã đơn vị tính", "Tên nhà cung cấp"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mặt Hàng");

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("Sửa đổi");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabelmamathang)
                                                .addComponent(jLabeltenmathang)
                                                .addComponent(jLabeldongianhap))
                                            .addGap(31, 31, 31)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextFieldmamathang, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFieldtenmathang, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFielddongianhap, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                )
                                            .addGap(80, 80, 80))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGap(174, 174, 174)
                                            .addComponent(jButtonthem)
                                            .addGap(117, 117, 117)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))

                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabelmadvt)
                                                .addComponent(jLabeltennhacungcap))
                                            .addGap(30, 30, 30)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextFieldmadvt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFieldtennhacungcap, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(50,50,50))
                                        
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(107, 107, 107)
                                            .addComponent(jButtonsua))))
                                )
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(10, 10, 10))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldmamathang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelmamathang))
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabeltenmathang)
                                .addComponent(jTextFieldtenmathang)
                                )
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabeldongianhap)
                                .addComponent(jTextFielddongianhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                        		.addGap(20,20,20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelmadvt)
                                        .addComponent(jTextFieldmadvt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabeltennhacungcap)
                                        .addComponent(jTextFieldtennhacungcap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))

                            .addGap(18, 18, 18)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGap(80, 80, 80)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonthem)
                        .addComponent(jButtonsua))
                    .addGap(20, 20, 20)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(10, 10, 10)))
            ;

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        jLabel2.setBackground(new java.awt.Color(230, 230, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/quydinh_64px.png"))); // NOI18N
        jLabel2.setText("Quy Chế Tổ Chức");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Icon_64px.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

		try (Connection conn = ConnectionUtils.getMyConnection()) 
		{
            if (conn != null) {
                System.out.println("Connected to the database!");
                Statement st =  conn.createStatement();
                ResultSet rs;
                rs = st.executeQuery("select * from mathang order by mamathang");
                                
                Statement st_tyle =  conn.createStatement();
                ResultSet rs_tyle;
                rs_tyle = st_tyle.executeQuery("select * from thamso");
                
                while(rs_tyle.next())
                	tyle = Float.parseFloat(rs_tyle.getString("tyledongiaxuat"));
                System.out.println(tyle);
                
                while (rs.next()) {
                    String[] value = new String[100];
                    
                	value[0] = rs.getString("mamathang");
                	value[1] = rs.getString("tenmathang");
                	value[2] = rs.getString("dongianhap");
                	value[3] = Float.toString(Float.parseFloat(rs.getString("dongianhap")) * tyle).substring(0,findDot(Float.toString(Float.parseFloat(rs.getString("dongianhap")) * tyle)));
                	value[4] = rs.getString("soluongton");
                	value[5] = rs.getString("madonvitinh");
                	value[6] = rs.getString("tennhacungcap");
                	
                	queries[index] = value;
                	index +=1 ;
                }

            } else {
                System.out.println("Failed to make connection!");
            }

        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }		
        
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            queries,
            new String [] {
                "Mã mặt hàng", "Tên mặt hàng", "Đơn giá nhập", "Đơn giá xuất","Số lượng tồn", "Mã đơn vị tính", "Tên nhà cung cấp"
            }
        ));
        
        jTable1.setToolTipText("");
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable1);        
        
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButton4)
                .addGap(92, 92, 92)
                .addGap(250,250,250)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jButton4))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        
        
        
        
        
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private int countBlank(String[] arr) {
    	int count = 0;
    	for (int i =0;i< 6;i++) {
    		if (arr[i].isBlank())
    			count +=1;
    	}
    	return count;
    }

    
    private int findDot(String arr) {
    	for (int i = 0;i<arr.length();i++) {
    		if (arr.charAt(i) =='.')
    			return i;
    	}
    	return 1;
    }
    private void jButtonthemActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	if(evt.getSource() == jButtonthem) {
    		boolean hasdvt = false;
    		try (Connection conn = ConnectionUtils.getMyConnection()) 
    		{
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st =  conn.createStatement();
                    ResultSet rs;
                    String[] value = new String[100];
                    
                    //value
                    value[0] = jTextFieldmamathang.getText();
                    value[1] = jTextFieldtenmathang.getText();
                    value[2] = jTextFielddongianhap.getText();
                    value[3] = Float.toString(Float.parseFloat(jTextFielddongianhap.getText()) * tyle).substring(0,findDot(Float.toString(Float.parseFloat(jTextFielddongianhap.getText()) * tyle)));
                    value[4] = "0";
                    value[5] = jTextFieldmadvt.getText();
                    value[6] = jTextFieldtennhacungcap.getText();
                    
                    
                    if (countBlank(value) >0) {
                       JOptionPane.showMessageDialog(null,
                                  "Vui lòng nhập đúng và đầy đủ thông tin về đại lý",
                                    "ERROR",
                                  JOptionPane.ERROR_MESSAGE);
                       return;
                    }
                    
        			Statement stdvt = conn.createStatement();
        			ResultSet rsdvt = stdvt.executeQuery("select * from donvitinh");
        			String madvt = jTextFieldmadvt.getText();
        			while (rsdvt.next()){
        				if (madvt.equals(rsdvt.getString("madonvitinh"))){
        					hasdvt = true;
        				}
        			}
        			
                    
                    String insert_query = "Insert into mathang values (\'" + value[0] + "\'," + "\'" + value[1] + "\'," + "\'" + value[2] + "\'," + "\'" + value[3] + "\'," + "\'" + value[4] + "\'," + "\'" + value[5] + "\'," + "\'" + value[6] + "\')" ;
                    System.out.println(insert_query);
                    
                    st.execute(insert_query);
                    
                    queries[index] = value;
                    index+=1;
                    
                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                            queries,
                            new String [] {
                                    "Mã mặt hàng", "Tên mặt hàng", "Đơn giá nhập", "Đơn giá xuất","Số lượng tồn", "Mã đơn vị tính", "Tên nhà cung cấp"
                            }
                        ));
                 
                } else {
                    System.out.println("Failed to make connection!");
                }

            } catch (SQLException e) {
                System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
                
                if (!hasdvt) {
                    JOptionPane.showMessageDialog(null,
                            "Mã đơn vị tính không tồn tại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

	            if (e.getSQLState().equals("42000"))
                	JOptionPane.showMessageDialog(null,
                            "Vui lòng nhập đúng định dạng",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);

	            else if (e.getSQLState().equals("23000"))
                    JOptionPane.showMessageDialog(null,
                            "Mã mặt hàng đã tồn tại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
	            return;

            } 
    		catch (Exception b) {
    			JOptionPane.showMessageDialog(null,
                        "Vui lòng nhập đúng định dạng",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
    			return;

    		}
    	}
        jButtonsua.setText("Sửa đổi");
        JOptionPane.showMessageDialog(null,
                "Thêm thành công",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        return;

    }                                        
    
    private String[][] removeElement(String[][] arr,int id) {
    	if (id < 0 || arr == null || id >= arr.length)
    		return arr;
    	
    	String[][] arr_temp = new String[arr.length-1][];
    	index -= 1;
    	
    	for (int i = 0,k=0;i<arr.length;i++) {
    		if (i == id) 
    			continue;
    		arr_temp[k++] = arr[i];
    	}
    	return arr_temp;
    }
    
    private int countNull(String[] arr) {
    	int count = 0;
    	for (int i =0;i<=8;i++) {
    		if (arr[i]== null)
    			count +=1;
    	}
    	return count;
    }
    
    private void jButtonxoaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	if (evt.getSource() == jButtonxoa) {
    		int row_select = jTable1.getSelectedRow();
    		if (row_select == -1) {
                JOptionPane.showMessageDialog(null,
                        "Vui lòng chọn mặt hàng cần xóa",
                        "ERROR",
                        JOptionPane.ERROR_MESSAGE);
                return;

    		}
    		if (row_select >=0 ) {
        		if (countNull(queries[row_select]) == 9) {
                    JOptionPane.showMessageDialog(null,
                            "Vui lòng chọn mặt hàng tồn tại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                    return;
        		}
    		}

    		try (Connection conn = ConnectionUtils.getMyConnection()) 
    		{
                if (conn != null) {
                    System.out.println("Connected to the database!");
                    Statement st =  conn.createStatement();
                    String delete_query = "Delete from mathang where mamathang = " + "\'" + queries[row_select][0] + "\'";
                    System.out.println(delete_query);
                    st.execute(delete_query);
            		queries = removeElement(queries,row_select);

                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    		queries,
                            new String [] {
                                    "Mã mặt hàng", "Tên mặt hàng", "Đơn giá nhập", "Đơn giá xuất","Số lượng tồn", "Mã đơn vị tính", "Tên nhà cung cấp"
                            }
                        ));

                } else {
                    System.out.println("Failed to make connection!");
                }

            } catch (SQLException e) {
                System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
                
                try {
                	if (!jTextFieldmadvt.getText().substring(0,2).equals("DV")) {
                        JOptionPane.showMessageDialog(null,
                                "Vui lòng nhập đúng định dạng mã đơn vị tính",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                	}
                }
                catch (java.lang.StringIndexOutOfBoundsException b) {
                    JOptionPane.showMessageDialog(null,
                            "Vui lòng nhập đúng định dạng mã đơn vị tính",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                	return;

                }

                
                if (e.getSQLState().equals("23000"))
                    JOptionPane.showMessageDialog(null,
                            "Lỗi khóa chính/ngoại",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                return;
            } catch (Exception e) {
                e.printStackTrace();
            }		
	        jButtonsua.setText("Sửa đổi");

    }
        JOptionPane.showMessageDialog(null,
                "Xóa thành công",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        return;

    	}
                                            
    private int current_row = -2;
    private void jButtonsuaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	if (evt.getSource() == jButtonsua) {
    		isSua = true;
    		boolean hasdvt = false;
    		int row_select = jTable1.getSelectedRow();
    		if (row_select >= index) {
        		jTextFieldmamathang.setText(null);
        		jTextFieldtenmathang.setText(null);
        		jTextFielddongianhap.setText(null);
        		jTextFieldmadvt.setText(null);
        		jTextFieldsoluongton.setText(null);
        		jTextFieldtennhacungcap.setText(null);
        		JOptionPane.showMessageDialog(null,
	        		    "Vui lòng chọn mặt hàng tồn tại",
	                    "ERROR",
	                    JOptionPane.ERROR_MESSAGE);
        		
        		current_row = row_select;
    			
                return;
    		}
    		
    		if (current_row >= 0 ) {
    			jTable1.getSelectionModel().setSelectionInterval(current_row, current_row);

    			jButtonsua.setText("Xác nhận");

    		}
    		
    		if (row_select >= 0) {
    			if (current_row != row_select) {
    				jTextFieldmamathang.setText(queries[row_select][0]);
    				jTextFieldtenmathang.setText(queries[row_select][1]);
    				jTextFielddongianhap.setText(queries[row_select][2]);
    				jTextFieldmadvt.setText(queries[row_select][5]);
    				jTextFieldsoluongton.setText(queries[row_select][4]);
    				jTextFieldtennhacungcap.setText(queries[row_select][6]);
    			}	
    			current_row = row_select;
    			    			    			    			    			
    			jButtonsua.setText("Sửa đổi");
    			
                if (jTextFieldmadvt.getText().isBlank() ) {
                    JOptionPane.showMessageDialog(null,
                            "Vui lòng nhập đúng định dạng mã đơn vị tính",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                	return;
                }

                
                try (Connection conn = ConnectionUtils.getMyConnection()) 
    			{
    	            if (conn != null) {
    	                System.out.println("Connected to the database!");
    	                Statement st =  conn.createStatement();
    	                
    	    			String update_query = "Update mathang set " + "mamathang = " + "\'" +  jTextFieldmamathang.getText() + "\', tenmathang = N\'" + jTextFieldtenmathang.getText() + "\'," +  "dongianhap = \'" + jTextFielddongianhap.getText() + "\'," + "soluongton = " + "\'" + queries[row_select][4] + "\', dongiaxuat = \'" + Float.toString(Float.parseFloat(jTextFielddongianhap.getText()) * tyle).substring(0,findDot(Float.toString(Float.parseFloat(jTextFielddongianhap.getText()) * tyle))) + "\', madonvitinh = \'" + jTextFieldmadvt.getText() + "\', tennhacungcap = N\'" + jTextFieldtennhacungcap.getText() + "\'"   + "where mamathang = \'" + queries[row_select][0] + "\'" ;
            			
    	    			Statement stdvt = conn.createStatement();
            			ResultSet rsdvt = stdvt.executeQuery("select * from donvitinh");
            			String madvt = jTextFieldmadvt.getText();
            			while (rsdvt.next()){
            				if (madvt.equals(rsdvt.getString("madonvitinh"))){
            					hasdvt = true;
            				}
            			}


    	    			System.out.println(update_query);
    	    			
    	                st.execute(update_query);
    	            }
    	            else {
    	                System.out.println("Failed to make connection!");
    	            }
    	        } 
    			catch (SQLException e) {
    	            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
                    
    	            if (!hasdvt) {
                        JOptionPane.showMessageDialog(null,
                                "Mã đơn vị tính không tồn tại",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                        return;

    	            }
    	                               
    	            if (e.getSQLState().equals("42000"))
                    	{JOptionPane.showMessageDialog(null,
                                "Vui lòng nhập đúng định dạng",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                    	return;
                    	}
    	            else if (e.getSQLState().equals("23000"))
                    {    
                    	JOptionPane.showMessageDialog(null,
                                "Mã mặt hàng đã tồn tại",
                                "ERROR",
                                JOptionPane.ERROR_MESSAGE);
                    	return;
                    }

    	        } catch (Exception e) {
    	            e.printStackTrace();
    	            JOptionPane.showMessageDialog(null,
                            "Vui lòng nhập đúng định dạng",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
    	            return;
    	        }		
    			
                queries[row_select][0] = jTextFieldmamathang.getText();
                queries[row_select][1] = jTextFieldtenmathang.getText();
                queries[row_select][2] = jTextFielddongianhap.getText();
                queries[row_select][3] = Float.toString(Float.parseFloat(jTextFielddongianhap.getText()) * tyle).substring(0,findDot(Float.toString(Float.parseFloat(jTextFielddongianhap.getText()) * tyle)));
                queries[row_select][5] = jTextFieldmadvt.getText();
                queries[row_select][6] = jTextFieldtennhacungcap.getText();

                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                		queries,
                        new String [] {
                                "Mã mặt hàng", "Tên mặt hàng", "Đơn giá nhập", "Đơn giá xuất","Số lượng tồn", "Mã đơn vị tính", "Tên nhà cung cấp"
                        }
                    ));
    		}
    		}

    }                                        

    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    	if (evt.getSource() == jButton3) {
    		this.dispose();
    		new QuyCheToChuc().setVisible(true);
    	}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    	if (evt.getSource() == jButton4) {
    		if (truycap.quyentruycap.equals("NND01")) {
    			new Home().setVisible(true);
    			this.dispose();
    		}
    		else if (truycap.quyentruycap.equals("NND02")) {
    			new Home_NhanVien().setVisible(true);
    			this.dispose();
    		}
    	}
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuyCheToChuc_MH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuyCheToChuc_MH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuyCheToChuc_MH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuyCheToChuc_MH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuyCheToChuc_MH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    
    private javax.swing.JLabel jLabelmamathang;
    private javax.swing.JLabel jLabeltenmathang;
    private javax.swing.JLabel jLabeldongianhap;
    private javax.swing.JLabel jLabelsoluongton;
    private javax.swing.JLabel jLabelmadvt;
    private javax.swing.JLabel jLabeltennhacungcap;

    private javax.swing.JTextField jTextFieldmamathang;
    private javax.swing.JTextField jTextFieldtenmathang;
    private javax.swing.JTextField jTextFielddongianhap;
    private javax.swing.JTextField jTextFieldsoluongton;
    private javax.swing.JTextField jTextFieldmadvt;
    private javax.swing.JTextField jTextFieldtennhacungcap;

    private javax.swing.JButton jButtonthem;
    private javax.swing.JButton jButtonxoa;
    private javax.swing.JButton jButtonsua;
    boolean isSua = false;
    String[][] queries = new String[100][100];
    int index = 0;
    Float tyle = 1f;
    
    // End of variables declaration//GEN-END:variables
}
